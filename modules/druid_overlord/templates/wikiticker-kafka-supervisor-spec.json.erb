<%  
 @kafka =
  eval(@nodes).select {|node| node[:roles].include? 'kafka'}[0][:hostname] +
  "." + @domain;
-%>
{
  "type": "kafka",
  "dataSchema": {
    "dataSource": "wikiticker-kafka",
    "parser": {
      "type": "string",
      "parseSpec": {
        "timestampSpec": { "column": "timestamp", "format": "auto" },
        "dimensionsSpec": {
          "dimensions": ["isRobot", "channel", "cityName", "flags", "isUnpatrolled", "page", "countryName", "regionIsoCode", "diffUrl", "metroCode", "comment", "isNew", "isMinor", "countryIsoCode", "isAnonymous", "user", "regionName", "namespace"]
        },
        "format": "json"
      }
    },
    "metricsSpec": [
      { "type": "count", "name": "count" },
      { "type": "doubleSum", "name": "added", "fieldName": "added" },
      { "type": "doubleSum", "name": "deleted", "fieldName": "deleted" },
      { "type": "doubleSum", "name": "delta", "fieldName": "delta" },
      { "name" : "user_unique", "type" : "hyperUnique", "fieldName" : "user" }
    ],
    "granularitySpec": {
      "type": "uniform",
      "segmentGranularity": "hour",
      "queryGranularity": "none"
    }
  },
  "tuningConfig": {
    "type": "kafka",
    "maxRowsPerSegment": 5000000
  },
  "ioConfig": {
    "topic": "wikipedia",
    "consumerProperties": {
      "bootstrap.servers": "<%= @kafka %>:9092"
    },
    "taskCount": 1,
    "replicas": 1,
    "taskDuration": "PT1H"
  }
}
